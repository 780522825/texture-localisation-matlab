function [const, deriv] = get_optimisation_params(f_trans, f, H)

x = f(1);
y = f(2);

H_u = H(1:2,:);
H_l = H(3,:);

const = f_trans - (H_u * [f; 1])/(H_l * [f; 1]);

deriv = [[ 1, 0, -x/(H(3,1)*x + H(3,2)*y + 1), 0, ...
    (x*(H(1,3) + H(1,1)*x + H(1,2)*y))/(H(3,1)*x + H(3,2)*y + 1)^2, ...
    -y/(H(3,1)*x + H(3,2)*y + 1), 0, ...
    (y*(H(1,3) + H(1,1)*x + H(1,2)*y))/(H(3,1)*x + H(3,2)*y + 1)^2, ...
    -1/(H(3,1)*x + H(3,2)*y + 1), 0]; ...
    ...
    [ 0, 1, 0, -x/(H(3,1)*x + H(3,2)*y + 1), ...
    (x*(H(2,3) + H(2,1)*x + H(2,2)*y))/(H(3,1)*x + H(3,2)*y + 1)^2, 0, ...
    -y/(H(3,1)*x + H(3,2)*y + 1), ...
    (y*(H(2,3) + H(2,1)*x + H(2,2)*y))/(H(3,1)*x + H(3,2)*y + 1)^2, 0, ...
    -1/(H(3,1)*x + H(3,2)*y + 1)]];

deriv = deriv';

end